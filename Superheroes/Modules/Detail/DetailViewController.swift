//
//  DetailViewController.swift
//  Superheroes
//
//  Created by Adam Cseke on 2022. 03. 03..
//  Copyright (c) 2022. levivig. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class DetailViewController: UIViewController {
    
    private var scrollView: UIScrollView!
    private var contentView: UIView!
    private let generator = UIImpactFeedbackGenerator(style: .medium)
    private var gradientLayer: CAGradientLayer!
    private var heroImageView: UIImageView!
    private var heroNameLabel: UILabel!
    private var saveButton: UIButton!
    
    private var selectedHero: Heroes?
    
    // MARK: - Public properties -
    
    var presenter: DetailPresenterInterface!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.viewDidLoad()
        setup()
    }
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        gradientLayer.frame = CGRect(x: 0, y: 0, width: heroImageView.frame.size.width, height: heroImageView.frame.size.height)
    }
    
    private func setup() {
        setNavigationBar()
        configureScrollView()
        configureViewController()
        configureHeroImageView()
        configureHeroNameLabel()
    }
    
    func setNavigationBar() {
        let screenSize: CGRect = UIScreen.main.bounds
        let navBar = UINavigationBar(frame: CGRect(x: 0, y: 0, width: screenSize.width, height: 44))
        saveButton = UIButton(type: UIButton.ButtonType.custom) as UIButton
        saveButton.setImage(UIImage(systemName: "star"), for: UIControl.State.normal)
        saveButton.setImage(UIImage(systemName: "star.fill"), for: UIControl.State.selected)
        saveButton.layer.backgroundColor = Colors.saveButtonBackground.color.cgColor
        saveButton.layer.cornerRadius = 18.5
        saveButton.addTarget(self, action: #selector(didTapNavBarButton), for: UIControl.Event.touchUpInside)
        
        saveButton.frame = CGRect(x: 0, y: 1.5, width: 37, height: 37)
        
        let barButton = UIBarButtonItem(customView: saveButton)
        self.navigationItem.rightBarButtonItem = barButton
        
        self.view.addSubview(navBar)
        
        navigationItem.largeTitleDisplayMode = .never
        navigationController?.navigationBar.backgroundColor = .clear
        navigationController?.navigationBar.tintColor = Colors.orange.color
        navigationController?.navigationBar.isTranslucent = true
        navigationController?.navigationBar.setBackgroundImage(UIImage(), for: .default)
    }
    
    @objc private func didTapNavBarButton() {
        generator.impactOccurred()
        //        if self.isFavorite {
        //            DatabaseManager.main.delete(username: self.username?.lowercased() ?? "") { _ in
        //                self.isFavorite = false
        //                self.changeFavoriteButton(isFavorite: self.isFavorite)
        //            }
        //        } else {
        //            DatabaseManager.main.insert(username: self.username?.lowercased() ?? "", avatar: selectedUser?.avatarURL ?? "") { _ in
        //                self.isFavorite = true
        //                self.changeFavoriteButton(isFavorite: self.isFavorite)
        //            }
        //        }
    }
    
    private func configureScrollView() {
        scrollView = UIScrollView()
        contentView = UIView()
        view.addSubview(scrollView)
        scrollView.addSubview(contentView)
        
        scrollView.snp.makeConstraints { make in
            make.top.equalToSuperview()
            make.leading.trailing.bottom.equalToSuperview()
        }
        
        contentView.snp.makeConstraints { make in
            make.edges.equalTo(scrollView)
            make.width.equalTo(scrollView.snp.width)
        }
    }
    
    private func configureViewController() {
        view.backgroundColor = .systemBackground
    }
    
    private func configureHeroImageView() {
        heroImageView = UIImageView()
        heroImageView.sd_setImage(with: URL(string: selectedHero?.image.url ?? ""),
                                  placeholderImage: Images.superhero.image)
        
        gradientLayer = CAGradientLayer()
        gradientLayer.colors = [UIColor(red: 0/255, green: 0/255, blue: 0/255, alpha: 0).cgColor,
                                UIColor(red: 0/255, green: 0/255, blue: 0/255, alpha: 1).cgColor]
        heroImageView.layer.insertSublayer(gradientLayer, at: 0)
        
        contentView.addSubview(heroImageView)
        
        heroImageView.snp.makeConstraints { make in
            make.leading.top.equalToSuperview()
            make.centerX.equalToSuperview()
            make.height.equalTo(500)
            make.width.equalTo(375)
        }
    }
    
    private func configureHeroNameLabel() {
        heroNameLabel = UILabel()
        heroNameLabel.font = UIFont(font: FontFamily.Gotham.bold, size: 37)
        heroNameLabel.textColor = Colors.orange.color
        heroNameLabel.text = selectedHero?.name
        
        contentView.addSubview(heroNameLabel)
        
        heroNameLabel.snp.makeConstraints { make in
            make.leading.equalToSuperview().offset(16)
            make.bottom.equalTo(heroImageView.snp.bottom).offset(-82)
        }
    }
    
}

// MARK: - Extensions -

extension DetailViewController: DetailViewInterface {
    func pushHeroName(hero: Heroes) {
        selectedHero = hero
    }
    
}
